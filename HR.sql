--Q1. HR EMPLOYEES 테이블에서 이름, 연봉, 10% 인상된 연봉을 출력하세요.
--A. 
SELECT FIRST_NAME, LAST_NAME, 12*SALARY, 1.1*SALARY
FROM EMPLOYEES;

    
--Q2.  2005년 상반기에 입사한 사람들만 출력	
--A.        
SELECT FIRST_NAME, LAST_NAME , HIRE_DATE FROM EMPLOYEES
WHERE TO_DATE('2005-01-01','YYYY-MM-DD') <= HIRE_DATE AND HIRE_DATE <= TO_DATE('2005-06-30', 'YYYY-MM-DD');

--Q3. 업무 SA_MAN, IT_PROG, ST_MAN 인 사람만 출력
--A.
SELECT FIRST_NAME, LAST_NAME, JOB_ID FROM EMPLOYEES
WHERE JOB_ID IN ('IT_PROG', 'ST_MAN');

--Q4. manager_id 가 101에서 103인 사람만 출력
--A.   	
SELECT FIRST_NAME, LAST_NAME, MANAGER_ID FROM EMPLOYEES
WHERE MANAGER_ID BETWEEN 101 AND 103;


--Q5. EMPLOYEES 테이블에서 LAST_NAME, HIRE_DATE 및 입사일의 6개월 후 첫 번째 월요일을 출력하세요.
--A.
SELECT LAST_NAME, HIRE_DATE, NEXT_DAY(ADD_MONTHS(HIRE_DATE, 6), '월요일') FROM EMPLOYEES;

--Q6. EMPLOYEES 테이블에서 EMPLPYEE_ID, LAST_NAME, SALARY, HIRE_DATE 및 입사일 기준으로 현재일까지의 W_MONTH(근속월수)를 정수로 계산해서 출력하세요.(근속월수 기준 내림차순)
--A.
SELECT EMPLOYEE_ID, LAST_NAME, SALARY, HIRE_DATE,
TRUNC((MONTHS_BETWEEN (SYSDATE, HIRE_DATE))) W_MONTH
FROM EMPLOYEES
ORDER BY W_MONTH DESC;

--Q7. EMPLOYEES 테이블에서 EMPLPYEE_ID, LAST_NAME, SALARY, HIRE_DATE 및 입사일 기준으로 W_YEAR(근속년수)를 계산해서 출력하세요.(근속년수 기준 내림차순)
--A.
SELECT EMPLOYEE_ID, LAST_NAME, SALARY, HIRE_DATE,
TRUNC((SYSDATE-HIRE_DATE)/365) W_YEAR
FROM EMPLOYEES
ORDER BY W_YEAR DESC;

--Q8. EMPLOYEE_ID가 홀수인 직원의 EMPLPYEE_ID와 LAST_NAME을 출력하세요.
--A. 
SELECT EMPLOYEE_ID, LAST_NAME FROM EMPLOYEES
WHERE MOD(EMPLOYEE_ID,2)=1;

--Q9. EMPLOYEES 테이블에서 EMPLPYEE_ID, LAST_NAME 및 M_SALARY(월급)을 출력하세요. 단 월급은 소수점 둘째자리까지만 표현하세요.
--A
SELECT EMPLOYEE_ID, LAST_NAME, TRUNC(SALARY/12,2)
FROM EMPLOYEES;


--Q10. EMPLOYEES 테이블에서 EMPLPYEE_ID, LAST_NAME, SALARY, HIRE_DATE 및 입사일 기준으로 근속년수를 계산해서 아래사항을 추가한 후에 출력하세요.
--2001년 1월 1일 창업하여 현재까지 20년간 운영되온 회사는 직원의  근속년수에 따라 30 등급으로 나누어  등급에 따라 1000원의 BONUS를 지급.
--내림차순 정렬.    
--A.
SELECT EMPLOYEE_ID, LAST_NAME, SALARY, HIRE_DATE,
TRUNC((SYSDATE-HIRE_DATE/365),0,20,30)-1) WB;--근속년수


--Q11. EMPLOYEES 테이블에서 commission_pct 의  Null값 갯수를  출력하세요.
--A.
SELECT COUNT(*) FROM EMPLOYEES
WHERE COMMISSION_PCT IS NULL;


--Q12. EMPLOYEES 테이블에서 deparment_id 가 없는 직원을 추출하여  POSITION을 '신입'으로 출력하세요.
--A.
SELECT FIRST_NAME, LAST_NAME, DEPARTMENT_ID, NVL(TO_CHAR(DEPARTMENT_ID), '신입') AS POSITION
FROM EMPLOYEES
WHERE DEPARTMENT_ID IS NULL;

--Q13. 사번이 120번인 사람의 사번, 이름, 업무(job_id), 업무명(job_title)을 출력(join~on, where 로 조인하는 두 가지 방법 모두)
--A.
SELECT * FROM EMPLOYEES;
SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME, JOB_ID, JOB_TITLE
FROM EMPLOYEES NATURAL JOIN JOBS;


--Q14.  employees 테이블에서 이름에 FIRST_NAME에 LAST_NAME을 붙여서 'NAME' 컬럼명으로 출력하세요.
--예) Steven King
--A. 
SELECT FIRST_NAME ||' '|| LAST_NAME AS NAME FROM EMPLOYEES;

--Q15. HR 테이블들을 분석해서 전체 현황을 설명할 수 있는 요약 테이블을 작성하세요. (예 : 부서별 평균 SALARY 순위)
--A.
SELECT DEPARTMENT_NAME, ROUND(AVG(SALARY)) AS AVG_SAL FROM DEPARTMENTS D, EMPLOYEES E
WHERE D.DEPARTMENT_ID = E.DEPARTMENT_ID
GROUP BY DEPARTMENT_NAME
ORDER BY AVG_SAL DESC;

--Q16. HR EMPLOYEES 테이블에서 escape 옵션을 사용하여 아래와 같이 출력되는 SQL문을 작성하세요.
--job_id 칼럼에서  _을 와일드카드가 아닌 문자로 취급하여 '_A'를 포함하는  모든 행을 출력
--A.
SELECT * FROM EMPLOYEES WHERE JOB_ID LIKE '%\_A%' ESCAPE '\';

--Q17. HR EMPLOYEES 테이블에서 SALARY, LAST_NAME 순으로 올림차순 정렬하여 출력하세요.
--A. 
SELECT SALARY, LAST_NAME FROM EMPLOYEES
ORDER BY SALARY, LAST_NAME;


--Q18. Seo라는 사람의 부서명을 출력하세요.
--A.
SELECT DEPARTMENT_NAME FROM DEPARTMENTS NATURAL JOIN EMPLOYEES
WHERE LAST_NAME = 'Seo';

SELECT DEPARTMENT_NAME FROM DEPARTMENTS
WHERE DEPARTMENT_ID = (SELECT DEPARTMENT_ID FROM EMPLOYEES WHERE LAST_NAME = 'Seo');


