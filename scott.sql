DESC EMP;

SELECT * FROM EMP;

SELECT EMPNO, ENAME, DEPTNO 
FROM EMP;

SELECT DISTINCT DEPTNO FROM EMP;

SELECT DISTINCT DEPTNO, JOB
FROM EMP;

SELECT ENAME, SAL*12
FROM EMP;

SELECT ENAME, SAL*12 AS ANNSAL
FROM EMP;

SELECT * FROM EMP
ORDER BY SAL;

SELECT * FROM EMP
ORDER BY SAL DESC;

SELECT * FROM EMP
ORDER BY DEPTNO ASC, SAL DESC;

SELECT * FROM EMP
WHERE DEPTNO = 30 AND JOB = 'SALESMAN';

SELECT * FROM EMP
WHERE DEPTNO = 30 OR SAL >= 1300;

SELECT * FROM EMP
WHERE DEPTNO = 20 OR JOB = 'SALESMAN'
ORDER BY ENAME;

SELECT ENAME FROM EMP
WHERE JOB = 'CLERK';

SELECT * FROM EMP
WHERE JOB = 'CLERK' AND HIREDATE < '90/01/01';

SELECT * FROM EMP
WHERE JOB = 'CLERK' AND HIREDATE < TO_DATE('01/01/90', 'DD-MM-YY');

SELECT * FROM EMP
WHERE SAL <> 3000 AND JOB != 'SALESMAN';

SELECT * FROM EMP
WHERE NOT SAL = 3000;

SELECT * FROM EMP
WHERE JOB IN ('MANAGER', 'SALESMAN', 'CLERK');

SELECT * FROM EMP
WHERE JOB NOT IN ('MANAGER', 'SALESMAN', 'CLERK');

SELECT * FROM EMP
WHERE DEPTNO IN (10, 20);

SELECT * FROM EMP
WHERE SAL NOT BETWEEN 2000 AND 3000;

SELECT * FROM EMP
WHERE ENAME LIKE 'A%';

SELECT * FROM EMP
WHERE ENAME LIKE '_A%';

SELECT * FROM EMP
WHERE ENAME LIKE '%AM%';

SELECT * FROM EMP
WHERE ENAME LIKE '_AM%';

SELECT * FROM EMP
WHERE COMM IS NOT NULL;

SELECT EMPNO, ENAME, SAL, DEPTNO
FROM EMP
WHERE DEPTNO = 10
UNION
SELECT EMPNO, ENAME, SAL, DEPTNO
FROM EMP
WHERE DEPTNO = 20;

SELECT EMPNO, ENAME, SAL, DEPTNO
FROM EMP
WHERE DEPTNO = 10 OR DEPTNO = 20
MINUS
SELECT EMPNO, ENAME, SAL, DEPTNO
FROM EMP
WHERE DEPTNO = 20;

SELECT ENAME, UPPER(ENAME), LOWER(ENAME), INITCAP(ENAME)
FROM EMP;

SELECT * FROM EMP
WHERE UPPER(ENAME) = 'SCOTT';

SELECT * FROM EMP
WHERE LOWER(ENAME) = 'scott';

SELECT * FROM EMP 
WHERE UPPER(ENAME) LIKE 'SC%';

----------------11.04------------------
SELECT ENAME, LENGTH(ENAME) FROM EMP
WHERE LENGTH(ENAME) >= 5;

SELECT LENGTH('한글'), LENGTHB('한글')
FROM DUAL;

SELECT 1+1
FROM DUAL;

SELECT JOB, SUBSTR(JOB, 2, 4)
FROM EMP;

SELECT JOB, SUBSTR(JOB, -2, 2)
FROM EMP;

SELECT INSTR('HELLO, ORACLE!', 'L')
FROM DUAL;

SELECT INSTR('HELLO, ORACLE!', 'L', 5)
FROM DUAL;

SELECT INSTR('HELLO, ORACLE!', 'L', 1, 3)
FROM DUAL;

SELECT REPLACE('010-1234-5678', '-', '+')
FROM DUAL;

SELECT LPAD('ORACLE', 10, '#')
FROM DUAL;

SELECT RPAD('ORACLE', 8, '#')
FROM DUAL;

SELECT RPAD('010-1234-', 13, '*')
FROM DUAL;

SELECT CONCAT(EMPNO, ENAME)
FROM EMP;

SELECT CONCAT(EMPNO, CONCAT(':', ENAME))
FROM EMP;

SELECT TRIM('ORACLE!') AS A FROM DUAL;
SELECT LTRIM('ORACLE!') FROM DUAL;
SELECT RTRIM('ORACLE!') FROM DUAL;
SELECT RTRIM('ORACLE!', '!') AS A FROM DUAL;

SELECT TRUNC(1234.5678, 1) FROM DUAL;
SELECT ROUND(1234.5678, 1) FROM DUAL;

SELECT CEIL(1234.5678) FROM DUAL;
SELECT FLOOR(1234.5678) FROM DUAL;

SELECT MOD(15,2) FROM DUAL;

SELECT SYSDATE FROM DUAL;
SELECT SYSDATE-1 FROM DUAL;

SELECT ADD_MONTHS(SYSDATE, 3) FROM DUAL;

SELECT ENAME, HIREDATE FROM EMP;

SELECT ENAME, HIREDATE, ADD_MONTHS(HIREDATE, 12) AS YEAR_2 FROM EMP;

SELECT ROUND(MONTHS_BETWEEN(SYSDATE, HIREDATE),3) AS MB FROM EMP;

----------------11.07------------------
SELECT SYSDATE FROM DUAL;

DESC EMP;

SELECT ENAME, SAL, SAL+'500' --자동 형변환
FROM EMP;

--TO_CHAR;
SELECT TO_CHAR(SYSDATE, 'DD/MM/YYYY'),
TO_CHAR(SYSDATE, 'DAY'),
TO_CHAR(SYSDATE, 'MONTH'),
TO_CHAR(SYSDATE, 'YEAR')
FROM DUAL;

SELECT SYSDATE, TO_CHAR(SYSDATE, 'HH24:MI:SS AM')
FROM DUAL;

SELECT SAL, TO_CHAR(SAL, '$999,999') AS SAL_$
FROM EMP;

--TO_NUMBER;
SELECT SAL, SAL + '500', SAL + TO_NUMBER('5,000', '9,999')
FROM EMP;

--TO_DATE;
SELECT TO_DATE('2018-07-14', 'YY-MM-DD') FROM DUAL;

SELECT * FROM EMP
WHERE HIREDATE < TO_DATE('1981-01-01', 'YYYY-MM-DD');

SELECT ENAME, SAL, COMM, SAL+COMM FROM EMP;

SELECT ENAME, SAL, COMM, SAL+NVL(COMM, 0) FROM EMP;

SELECT SAL, COMM, NVL2(COMM, SAL*12 + COMM, SAL*12) FROM EMP;

SELECT ENAME, JOB, SAL,
CASE JOB
    WHEN 'MANAGER' THEN SAL*1.1
    ELSE SAL*1.03
END
FROM EMP;

SELECT ENAME, COMM,
CASE
    WHEN COMM IS NULL THEN '해당사항 없음'
    WHEN COMM = 0 THEN '보너스 없음'
    ELSE '수당:' || COMM
END
FROM EMP;

SELECT SUM(SAL) FROM EMP;
SELECT SUM(COMM) FROM EMP;

SELECT COUNT(*) FROM EMP;
SELECT COUNT(ENAME) FROM EMP;

SELECT COUNT(*) FROM EMP
WHERE DEPTNO = 30;

SELECT COUNT(*) FROM EMP
WHERE COMM IS NOT NULL;

SELECT MAX(SAL) FROM EMP
WHERE DEPTNO = 30;

SELECT MAX(ENAME) FROM EMP;

SELECT MAX(HIREDATE) FROM EMP
WHERE DEPTNO = 20;

SELECT DEPTNO, ROUND(AVG(SAL),3) FROM EMP
GROUP BY DEPTNO;

----------------11.08------------------
SELECT JOB, DEPTNO, AVG(SAL) FROM EMP
GROUP BY JOB, DEPTNO
ORDER BY DEPTNO;

SELECT JOB, AVG(SAL) FROM EMP
GROUP BY JOB
HAVING AVG(SAL) >= 1000;

SELECT JOB, AVG(SAL) FROM EMP
WHERE SAL >= 1500
GROUP BY JOB
HAVING AVG(SAL) >= 1000;

SELECT DEPTNO, JOB, COUNT(*), MAX(SAL) FROM EMP
GROUP BY DEPTNO, JOB
ORDER BY DEPTNO, JOB;

SELECT DEPTNO, JOB, COUNT(*), MAX(SAL), SUM(SAL) FROM EMP
GROUP BY ROLLUP(DEPTNO, JOB)
ORDER BY DEPTNO, JOB;

SELECT DEPTNO, JOB, COUNT(*), MAX(SAL), SUM(SAL) FROM EMP
GROUP BY CUBE(DEPTNO, JOB)
ORDER BY DEPTNO, JOB;

----------------11.09------------------
SELECT JOB, COUNT(*) FROM EMP
GROUP BY JOB
HAVING COUNT(*) > 2;

SELECT TO_CHAR(HIREDATE, 'YYYY') AS HIRE_YEAR, DEPTNO, COUNT(*) FROM EMP
GROUP BY TO_CHAR(HIREDATE, 'YYYY'), DEPTNO;

--EQUI JOIN
SELECT * FROM EMP, DEPT
WHERE EMP.DEPTNO = DEPT.DEPTNO
ORDER BY EMP.DEPTNO;

SELECT ENAME, LOC, D.DEPTNO
FROM EMP E , DEPT D
WHERE E.DEPTNO = D.DEPTNO;

SELECT ENAME, LOC, D.DEPTNO, SAL
FROM EMP E , DEPT D
WHERE E.DEPTNO = D.DEPTNO
AND SAL >= 3000;

SELECT ENAME, SAL
FROM EMP, SALGRADE
WHERE SAL BETWEEN LOSAL AND HISAL;

--SELF JOIN
SELECT E1.ENAME, E1.JOB, E2.ENAME AS MANAGER, E2.JOB AS MANAGER_JOB
FROM EMP E1, EMP E2
WHERE E1.MGR = E2.EMPNO;

SELECT E1.EMPNO, E1.ENAME, E1.MGR, E2.EMPNO, E2.ENAME, E2.MGR
FROM EMP E1, EMP E2
WHERE E1.MGR = E2.EMPNO(+);

SELECT E1.EMPNO, E1.ENAME, E1.MGR, E2.EMPNO, E2.ENAME, E2.MGR
FROM EMP E1, EMP E2
WHERE E1.MGR(+) = E2.EMPNO;

--NATURAL JOIN
SELECT EMPNO, ENAME, DEPTNO, DNAME, LOC
FROM EMP NATURAL JOIN DEPT
WHERE SAL >= 3000;

--JOIN~USING
SELECT EMPNO, ENAME, DEPTNO, DNAME, LOC
FROM EMP JOIN DEPT USING (DEPTNO)
WHERE SAL >= 3000;

--SUBQUERY
SELECT * FROM EMP
WHERE SAL > (SELECT SAL FROM EMP WHERE ENAME = 'JONES');

SELECT * FROM EMP
WHERE HIREDATE > (SELECT HIREDATE FROM EMP WHERE ENAME = 'ALLEN');

SELECT * FROM EMP
WHERE COMM > (SELECT COMM FROM EMP WHERE ENAME = 'ALLEN');

----------------11.10------------------
SELECT ENAME, SAL, DEPTNO, DNAME, LOC
FROM EMP NATURAL JOIN DEPT
WHERE SAL <= (SELECT AVG(SAL) FROM EMP)
AND DEPTNO = 20;

SELECT * FROM EMP
WHERE SAL IN (SELECT MAX(SAL) FROM EMP GROUP BY DEPTNO);

--30번 부서의 최소급여보다 크면 출력
SELECT * FROM EMP
WHERE SAL > ANY (SELECT SAL FROM EMP WHERE DEPTNO = 30);

--30번 부서의 최대급여보다 작으면 출력
SELECT * FROM EMP
WHERE SAL < ANY (SELECT SAL FROM EMP WHERE DEPTNO = 30);

--30번 부서의 최대급여보다 크면 출력
SELECT * FROM EMP
WHERE SAL > ALL (SELECT SAL FROM EMP WHERE DEPTNO = 30);

--30번 부서의 최소급여보다 작으면 출력
SELECT * FROM EMP
WHERE SAL < ALL (SELECT SAL FROM EMP WHERE DEPTNO = 30);

----------------11.15------------------
SELECT * FROM EMP
WHERE (DEPTNO, SAL) IN (SELECT DEPTNO, MAX(SAL) FROM EMP 
                        GROUP BY DEPTNO);

SELECT E.JOB, E.EMPNO, E.ENAME, E.SAL, DEPTNO, D.DNAME
FROM EMP E JOIN DEPT D USING(DEPTNO)
WHERE JOB = (SELECT JOB FROM EMP WHERE ENAME = 'ALLEN')
ORDER BY SAL DESC; 

SELECT JOB, EMPNO, ENAME, SAL, DEPTNO, DNAME
FROM EMP NATURAL JOIN DEPT
WHERE JOB = (SELECT JOB FROM EMP WHERE ENAME = 'ALLEN')
ORDER BY SAL DESC;

--DML: SELECT, INSERT, UPDATE, DELETE
--DDL: CREATE TABLE, ALTER TABLE, RENAME TABLE, DROP TABLE
--DCL: GRANT, REVOKE
--TCL: COMMIT, ROLLBACK

CREATE TABLE DEPT_TEMP
AS SELECT * FROM DEPT;

INSERT INTO DEPT_TEMP
VALUES (50, 'DATABASE', 'SEOUL');

INSERT INTO DEPT_TEMP
VALUES (60, 'WEB', NULL);

INSERT INTO DEPT_TEMP
VALUES (70, 'WEB', '');

SELECT * FROM DEPT_TEMP;

CREATE TABLE EMP_TEMP
AS SELECT * FROM EMP
WHERE DEPTNO = 10;

INSERT INTO EMP_TEMP
VALUES (9999, '홍길동', 'PRESIDENT', NULL, '2001/01/01', 5000, 1000, 10);

INSERT INTO EMP_TEMP
VALUES (1000, '홍길동', 'PRESIDENT', NULL, TO_DATE('07/01/2001', 'DD/MM/YYYY'), 5000, 1000, 10);

INSERT INTO EMP_TEMP
SELECT EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO FROM EMP, SALGRADE
WHERE SAL BETWEEN LOSAL AND HISAL
AND GRADE = 1;

SELECT * FROM EMP_TEMP;

CREATE TABLE DEPT_TEMP2
AS SELECT * FROM DEPT;

SELECT * FROM DEPT_TEMP2;

UPDATE DEPT_TEMP2
SET LOC = 'SEOUL';

--취소
ROLLBACK;

UPDATE DEPT_TEMP2
SET DNAME = 'DATABASE', LOC = 'BUSAN'
WHERE DEPTNO = 40;

--저장
COMMIT;

ROLLBACK;

SELECT * FROM DEPT_TEMP2;

UPDATE DEPT_TEMP2
SET DEPTNO = 50, DNAME = 'SALES'
WHERE LOC = 'BUSAN';

CREATE TABLE EMP_TEMP2
AS SELECT * FROM EMP;

SELECT * FROM EMP_TEMP2;

DELETE FROM EMP_TEMP2
WHERE JOB = 'MANAGER';

COMMIT;

----------------11.16------------------
CREATE TABLE EMP_ALTER
AS SELECT * FROM EMP;

SELECT * FROM EMP_ALTER;

ALTER TABLE EMP_ALTER
ADD HP VARCHAR2(20);

ALTER TABLE EMP_ALTER
RENAME COLUMN HP TO TEL;

ALTER TABLE EMP_ALTER
MODIFY EMPNO NUMBER(5);

DESC EMP_ALTER;

ALTER TABLE EMP_ALTER
DROP COLUMN TEL;

RENAME EMP_ALTER TO EMP_ALTERTABLE;

SELECT * FROM EMP_ALTERTABLE;

SELECT * FROM DICTIONARY;

SELECT * FROM USER_INDEXES;

CREATE INDEX IDX_EMP_SAL ON EMP(SAL);

CREATE VIEW VW_EMP20
AS SELECT EMPNO, ENAME, JOB, DEPTNO FROM EMP
    WHERE DEPTNO = 20;

SELECT * FROM VW_EMP20;

SELECT ENAME, LOC FROM VW_EMP20 NATURAL JOIN DEPT
WHERE JOB = 'CLERK';

CREATE VIEW VW_EMP30
AS SELECT EMPNO, ENAME, JOB, DEPTNO FROM EMP
WHERE DEPTNO = 20 ORDER BY ENAME;

SELECT * FROM VW_EMP30;

SELECT * FROM USER_VIEWS;

SELECT ROWNUM, EMP.* FROM EMP;

SELECT ROWNUM, EMP.* FROM EMP
ORDER BY ENAME;

SELECT ROWNUM, EMP.* FROM EMP
WHERE ROWNUM <= 10
ORDER BY SAL;

CREATE TABLE DEPT_SEQUENCE
AS SELECT * FROM DEPT
WHERE 1 <> 1;

SELECT * FROM DEPT_SEQUENCE;

INSERT INTO DEPT_SEQUENCE
VALUES (5, 'DATABASE', 'SEOUL');

CREATE SEQUENCE SEQ_DEPT_SEQUENCE
INCREMENT BY 2
START WITH 10;

INSERT INTO DEPT_SEQUENCE
VALUES (SEQ_DEPT_SEQUENCE.NEXTVAL, 'DATABASE', 'BUSAN');

INSERT INTO DEPT_SEQUENCE
VALUES (SEQ_DEPT_SEQUENCE.NEXTVAL, 'DATABASE', 'ILSAN');

SELECT * FROM DEPT_SEQUENCE;

SELECT SEQ_DEPT_SEQUENCE.CURRVAL FROM DUAL;

CREATE SYNONYM E FOR EMP;

SELECT * FROM E;

CREATE SYNONYM V FOR VW_EMP_SAL;

SELECT * FROM V;

--제약 조건--
--NOT NULL
--UNIQUE
--PRIMARY KEY
--FOREIGN KEY
--CHECK

CREATE TABLE TABLE_NOTNULL(
    LOGIN_ID VARCHAR2(20) UNIQUE,
    LOGIN_PWD VARCHAR2(20) NOT NULL,
    TEL VARCHAR(20) PRIMARY KEY
    );
    
SELECT * FROM TABLE_NOTNULL;

INSERT INTO TABLE_NOTNULL
VALUES ('ID', 'PASS', '02-55');

INSERT INTO TABLE_NOTNULL
VALUES ('ID', 'PASS', '02-55');

INSERT INTO TABLE_NOTNULL
VALUES ('ID2', '', '02-55');

INSERT INTO TABLE_NOTNULL
VALUES ('', 'PASS', '7');

CREATE TABLE DEPT_PK(
    DEPTNO NUMBER(2) PRIMARY KEY,
    DNAME VARCHAR2(14),
    LOC VARCHAR2(14)
    );
    
CREATE TABLE EMP_FK(
    EMPNO NUMBER(4) PRIMARY KEY,
    ENAME VARCHAR2(10),
    JOB VARCHAR2(9),
    HIREDATE DATE,
    SAL NUMBER(7,2),
    DEPTNO NUMBER(2) REFERENCES DEPT_PK (DEPTNO)
    );

INSERT INTO DEPT_PK
VALUES(11,'NAME','SEOUL');

INSERT INTO EMP_FK
VALUES(1111,'PARK','DOCTOR','1998/01/01',3000,11);

SELECT * FROM EMP_FK;

SELECT * FROM DEPT_PK;

SELECT * FROM EMP_FK NATURAL JOIN DEPT_PK;
